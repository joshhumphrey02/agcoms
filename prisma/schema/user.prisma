model User {
    id        String @id @default(cuid())
    firstName String @db.VarChar(100)
    lastName  String @db.VarChar(100)

    email       String @unique
    phone       String
    intlPhone   String @unique
    country     String
    countryCode String
    password    String

    dob           DateTime?
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
    userType      UserType?
    emailVerified DateTime?

    sessions            AuthSession[]
    verificationTokens  VerificationToken[]
    passwordResetTokens PasswordResetTokens[]
}

model AuthSession {
    id        String    @id @default(cuid())
    userId    String
    expiresAt DateTime?
    createdAt DateTime  @default(now())
    // Relations
    user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id        String   @id @default(cuid())
    token     String   @unique
    expiresAt DateTime
    email     String
    userId    String
    createdAt DateTime @default(now())

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([email, token])
}

model PasswordResetTokens {
    id        String   @id @default(cuid())
    token     String   @unique
    expiresAt DateTime
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId    String

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum UserType {
    USER
    STAFF
    OWNER
    VISTOR
}
